#!/usr/bin/env ruby

require 'thor'
# require 'pry-byebug'
require 'aws-sdk-core'
# require_relative '../lib/shoryuken/cli'

# begin
#   Shoryuken::CLI.instance.run(ARGV)
# rescue => e
#   raise e if $DEBUG
#   STDERR.puts e.message
#   STDERR.puts e.backtrace.join("\n")
#   exit 1
# end
module Shoryuken
  module CLI
    class Base < Thor
      # rubocop:disable Metrics/AbcSize
      no_commands do
        def print_table(entries)
          entries.each do |entry|
            puts entry.map(&method(:format_table_column)).join
          end
        end

        def format_table_column(column)
          column = column.to_s.ljust(40)
          column = "#{column[0...40]}.." if column.size > 40
          column
        end
      end
    end
  end
end

module Shoryuken
  module CLI
    class SQS < Base
      namespace :sqs

      desc 'ls [QUEUE_NAME_PREFIX]', 'Returns a list of your queues.'
      def ls(queue_name_prefix = '')
        # https://docs.aws.amazon.com/sdkforruby/api/Aws/SQS/Client.html#list_queues-instance_method
        sqs = Aws::SQS::Client.new

        attrs = %w(QueueArn ApproximateNumberOfMessages ApproximateNumberOfMessagesNotVisible LastModifiedTimestamp)

        urls = sqs.list_queues(queue_name_prefix: queue_name_prefix).queue_urls

        entries = urls.map { |u| sqs.get_queue_attributes(queue_url: u, attribute_names: attrs).attributes }.map do |q|
          [
            q['QueueArn'].split(':').last,
            q['ApproximateNumberOfMessages'],
            q['ApproximateNumberOfMessagesNotVisible'],
            Time.at(q['LastModifiedTimestamp'].to_i)
          ]
        end

        entries.unshift(['Queue', 'Messages Available', 'Messages Inflight', 'Last Modified'])

        print_table(entries)
      end
    end
  end
end

module Shoryuken
  module CLI
    class Register < Thor
      register(Shoryuken::CLI::SQS, 'sqs', 'sqs <command>', 'SQS commands')
    end
  end
end

Shoryuken::CLI::Register.start
